{"version":3,"sources":["components/credentials.js","components/weatherType.js","components/weather.js","App.js","index.js"],"names":["apiCredentials","WeatherType","Weather","props","apiFetch","apiUrl","state","city","fetch","then","result","json","results","setData","weatherResults","current","style","visibility","console","log","catch","error","setState","statusText","data","time","location","localtime","name","region","country","weather","condition","text","celsius","temp_c","farenhiet","temp_f","humidity","cloud","wind","wind_kph","document","body","backgroundImage","textChange","event","target","value","search","preventDefault","apiData","textBox","React","createRef","onSubmit","this","ref","type","placeholder","onChange","className","fontSize","Component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c721149a.chunk.js","sourcesContent":["export const apiCredentials = {\n\tkey: '7b6fba372203497b81e143054200406'\n}","export const WeatherType = {\n\t\"Partly cloudy\": 'url(/photos/PartlyCloudy.jpg)',\n\t\"Clear\": 'url(/photos/Clear.jpg)',\n\t\"Sunny\": 'url(/photos/Sunny.jpg)',\n\t\"Mist\": 'url(/photos/Mist.jpg)',\n\t\"Cloudy\": 'url(/photos/Cloudy.jpg)',\n\t\"Overcast\": 'url(/photos/Overcast.jpg)',\n\t\"Patchy rain possible\": 'url(/photos/PatchyRain.jpg)',\n\t\"Patchy snow possible\": 'url(/photos/LightSnow.jpg)',\n\t\"Patchy sleet possible\": 'url(/photos/Snow.jpg)',\n\t\"Patchy freezing drizzle possible\": 'url(/photos/PatchyRain.jpg)',\n\t\"Thundery outbreaks possible\": 'url(/photos/Thunder.jpg)',\n\t\"Blowing snow\": 'url(/photos/Snow.jpg)',\n\t\"Blizzard\": 'url(/photos/Snow.jpg)',\n\t\"Fog\": 'url(/photos/Fog.jpg)',\n\t\"Freezing fog\": 'url(/photos/Fog.jpg)',\n\t\"Patchy light drizzle\": 'url(/photos/PatchyRain.jpg)',\n\t\"Light drizzle\": 'url(/photos/PatchyRain.jpg)',\n\t\"Freezing drizzle\": 'url(/photos/LightSnow.jpg)',\n\t\"Heavy freezing drizzle\": 'url(/photos/Rain.jpg)',\n\t\"Patchy light rain\": 'url(/photos/LightRain.jpg)',\n\t\"Light rain\": 'url(/photos/LightRain.jpg)',\n\t\"Moderate rain at times\": 'url(/photos/PatchyRain.jpg)',\n\t\"Moderate rain\": 'url(/photos/LightRain.jpg)',\n\t\"Heavy rain at times\": 'url(/photos/HeavyRain.jpg)',\n\t\"Heavy rain\": 'url(/photos/HeavyRain.jpg)',\n\t\"Light freezing rain\": 'url(/photos/LightRain.jpg)',\n\t\"Moderate or heavy freezing rain\": 'url(/photos/Rain.jpg)',\n\t\"Light sleet\": 'url(/photos/LightSnow.jpg)',\n\t\"Moderate or heavy sleet\": 'url(/photos/Snow.jpg)',\n\t\"Patchy light snow\": 'url(/photos/LightSnow.jpg)',\n\t\"Light snow\": 'url(/photos/LightSnow.jpg)',\n\t\"Patchy moderate snow\": 'url(/photos/LightSnow.jpg)',\n\t\"Moderate snow\": 'url(/photos/Snow.jpg)',\n\t\"Patchy heavy snow\": 'url(/photos/Snow.jpg)',\n\t\"Heavy snow\": 'url(/photos/Snow.jpg)',\n\t\"Ice pellets\": 'url(/photos/Icey.jpg)',\n\t\"Light rain shower\": 'url(/photos/LightRain.jpg)',\n\t\"Moderate or heavy rain shower\": 'url(/photos/HeavyRain.jpg)',\n\t\"Torrential rain shower\": 'url(/photos/HeavyRain.jpg)',\n\t\"Light sleet showers\": 'url(/photos/LightRain.jpg)',\n\t\"Moderate or heavy sleet showers\": 'url(/photos/LightRain.jpg)',\n\t\"Light snow showers\": 'url(/photos/LightSnow.jpg)',\n\t\"Moderate or heavy snow showers\": 'url(/photos/Snow.jpg)',\n\t\"Light showers of ice pellets\": 'url(/photos/Icey.jpg)',\n\t\"Moderate or heavy showers of ice pellets\": 'url(/photos/HeavyRain.jpg)',\n\t\"Patchy light rain with thunder\": 'url(/photos/ThunderCloud.jpg)',\n\t\"Moderate or heavy rain with thunder\": 'url(/photos/HeavyRain.jpg)',\n\t\"Patchy light snow with thunder\": 'url(/photos/ThunderCloud.jpg)',\n\t\"Moderate or heavy snow with thunder\": 'url(/photos/ThunderCloud.jpg)',\n}","import React, { Component } from \"react\";\n\nimport { apiCredentials } from './credentials';\nimport { WeatherType } from './weatherType'\n\nexport default class Weather extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\tstatusText: '',\n\n\t\t\ttime: '', name: '', region: '', country: '',\n\t\t\tweather: '', celsius: '', farenhiet: '',\n\t\t\thumidity: '', cloud: '', wind: ''\n\t\t}\n\n\t\tthis.weather = WeatherType;\n\t\tthis.apiData = null;\n\n\t\tthis.textBox = React.createRef();\n\t\tthis.weatherResults = React.createRef();\n\t}\n\t//componentDidMount=()=>{}\n\tapiFetch = () => {\n\t\tconst apiUrl = `https://api.weatherapi.com/v1/current.json?key=${apiCredentials.key}&q=${this.state.city}`;\n\n\t\tfetch(apiUrl).then(result => result.json()).then((results) => {\n\t\t\tthis.setData(results);\n\t\t\tthis.weatherResults.current.style.visibility = 'visible';\n\t\t\tconsole.log(results);\n\t\t}).catch(error => {\n\t\t\tthis.setState({ statusText: 'Place not found.' })\n\t\t\tthis.weatherResults.current.style.visibility = 'hidden'\n\t\t\tconsole.log(error);\n\t\t})\n\t}\n\n\tsetData = (data) => {\n\t\tthis.setState({time: data.location.localtime});\n\t\tthis.setState({ name: data.location.name });\n\t\tthis.setState({ region: data.location.region });\n\t\tthis.setState({ country: data.location.country });\n\t\tthis.setState({ weather: data.current.condition.text });\n\t\tthis.setState({ celsius: data.current.temp_c });\n\t\tthis.setState({ farenhiet: data.current.temp_f });\n\t\tthis.setState({ humidity: data.current.humidity });\n\t\tthis.setState({ cloud: data.current.cloud });\n\t\tthis.setState({ wind: data.current.wind_kph });\n\n\t\tthis.setState({ statusText: 'Showing latest reports.' });\n\n\t\tdocument.body.style.backgroundImage = this.weather[data.current.condition.text];\n\t}\n\n\ttextChange = (event) => {\n\t\tthis.setState({ city: event.target.value });\n\t}\n\n\tsearch = (event) => {\n\t\tevent.preventDefault();\n\t\tthis.apiFetch();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>The Weather</h1>\n\n\t\t\t\t<form onSubmit={this.search} >\n\t\t\t\t\t<input ref={this.textBox} type='text' placeholder='Enter your City' onChange={this.textChange} />\n\t\t\t\t\t<button type='submit'>Search</button>\n\t\t\t\t</form>\n\n\t\t\t\t<div ref={this.weatherResults} className='weatherDisplay'>\n\t\t\t\t\t<p>{this.state.name}</p>\n\t\t\t\t\t<p>{this.state.region} - {this.state.country}</p>\n\t\t\t\t\t<p style={{fontSize: '3em' }}>{this.state.weather}</p>\n\t\t\t\t\t<p>Temp: {this.state.celsius} °C / {this.state.farenhiet} °F</p>\n\t\t\t\t\t<p>Cloud: {this.state.cloud}%</p>\n\t\t\t\t\t<p>Wind: {this.state.wind} Km/hr</p>\n\t\t\t\t\t<p>Humidity: {this.state.humidity}%</p>\n\t\t\t\t</div>\n\n\t\t\t\t<p style={{ fontSize: '1em' }}>{this.state.statusText}</p>\n\t\t\t</div>\n\t\t)\n\t}\n}","import React from \"react\";\nimport Weather from \"./components/weather\"\nimport \"./App.css\";\n\nfunction App() {\n\treturn (\n\t\t<div>\n\t\t\t<Weather/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}